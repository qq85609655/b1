<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gtafe.data.center.dataetl.mapping.mapper.MappingMapper">
    <!-- 分页查询映射数据 -->
    <select id="list"
            resultType="com.gtafe.data.center.dataetl.mapping.vo.MappingResultVO">  
        <![CDATA[ 
        SELECT
        m.id mappingId,
        m. NAME NAME,
        m.updatetime,
        m.executing_rowcount executingRowcount,
        m.datatype_value datatypeValue,
        m.description description,
        t.type_name typeName,
        (
        CASE
        WHEN s. MINUTE <> 0 THEN
        CONCAT(s. MINUTE, '分钟')
        WHEN s.SECOND <> 0 THEN
        CONCAT(s. SECOND, '秒')
        WHEN s. HOUR <> 0 THEN
        CONCAT(s. HOUR, '小时')
        WHEN s. DAY <> 0 THEN
        CONCAT(s. DAY, '天')
        END
        ) scheduleName,
        s.id scheduleId,
        s. STATUS,
        r. NAME resourceTreeName,
        m.source_connection_id source_connection_id,
        db1. NAME source_connection_name,
        m.source_tablename source_tablename,
        m.target_connection_id target_connection_id,
        db2. NAME target_connection_name,
        m.target_tablename target_tablename,
        m.subset_code,
        m.class_code,
        m.subclass_code,
        ss.code_name subsetName,
        cl.class_name categoryName,
        sc.subclass_comment subclassName,
        m.resourcetree_id resourceTreeId
        FROM
        data_etl_mapping m
        LEFT JOIN data_etl_schedule s ON m.schedule_id = s.id
        LEFT JOIN data_etl_datatype t ON m.datatype_value = t.type_value
        LEFT JOIN data_etl_resourcetree r ON m.resourcetree_id = r.id
        LEFT JOIN info_metadata_subset ss ON ss. CODE = m.subset_code
        LEFT JOIN info_metadata_class cl ON cl.class_code = m.class_code
        LEFT JOIN info_metadata_subclass sc ON sc.subclass_code = m.subclass_code
        LEFT JOIN data_etl_dataconnection db1 ON m.source_connection_id = db1.id
        LEFT JOIN data_etl_dataconnection db2 ON m.target_connection_id = db2.id
        WHERE
        m.resourcetree_id IN (select tr.id from  data_etl_resourcetree tr where FIND_IN_SET(tr.id,getChildrenTree(#{resourceTreeId}))) 
        and r.business_type=#{businessType}
        ]]>
        <if test="dataTypeValue != 0 and dataTypeValue != null">
            AND m.datatype_value = #{dataTypeValue}
        </if>
        <if test="status != 0  and status != null">
            AND s.`status` = #{status}
        </if>
        <if test="name != null">
            AND m.name LIKE
            CONCAT('%',#{name},'%')
        </if> 
        ORDER BY
       m.updatetime DESC
        
    </select>


    <resultMap type="com.gtafe.data.center.dataetl.mapping.vo.MappingVO"
               id="resultMapping">
        <id column="id" property="id"/>
        <result column="description" property="description"/>
        <result column="name" property="name"/>
        <result column="datatypeValue" property="datatypeValue"/>
        <result column="executingRowcount" property="executingRowcount"/>
        <result column="resourceTreeId" property="resourceTreeId"/>
        <result column="resourceTreeName" property="resourceTreeName"/>
        <result column="subsetCode" property="subsetCode"/>
        <result column="executingRowcount" property="executingRowcount"/>
        <result column="sourceConnectionId" property="sourceConnectionId"/>
        <result column="sourceTableName" property="sourceTableName"/>
        <result column="targetConnectionId" property="targetConnectionId"/>
        <result column="targetTableName" property="targetTableName"/>
        <result column="businessType" property="businessType"/>
        <result column="classCode" property="classCode"/>
        <result column="subclassCode" property="subclassCode"/>
        <association property="scheduleVO" column="scheduleId"
                     javaType="com.gtafe.data.center.dataetl.mapping.vo.ScheduleVO">
            <id column="id" property="id"/>
            <result column="isrepeat" property="isrepeat"/>
            <result column="cycleType" property="cycleType"/>
            <result column="second" property="second"/>
            <result column="minute" property="minute"/>
            <result column="hour" property="hour"/>
            <result column="day" property="day"/>
            <result column="week" property="week"/>
            <result column="status" property="status"/>
        </association>
        <collection property="splitVOs"
                    ofType="com.gtafe.data.center.dataetl.mapping.vo.SplitVO">
            <id column="id" property="id"/>
            <result column="mappingId" property="mappingId"/>
            <collection property="splitFieldVOs"
                        ofType="com.gtafe.data.center.dataetl.mapping.vo.SplitFieldVO">
                <id column="splitId" property="splitId"/>
                <result column="fieldIndex" property="fieldIndex"/>
            </collection>
        </collection>
        <collection property="replaceVOs"
                    ofType="com.gtafe.data.center.dataetl.mapping.vo.ReplaceVO">
            <id column="replaceId" property="replaceId"/>
            <result column="mappingId" property="mappingId"/>
            <collection property="replaceFieldVOs"
                        ofType="com.gtafe.data.center.dataetl.mapping.vo.ReplaceFieldVO">
                <id column="id" property="id"/>
                <result column="concatId" property="concatId"/>
            </collection>
        </collection>
        <collection property="concatVOs"
                    ofType="com.gtafe.data.center.dataetl.mapping.vo.ConcatVO">
            <id column="concatId" property="concatId"/>
            <result column="mappingId" property="mappingId"/>
            <collection property="concatFieldVOs"
                        ofType="com.gtafe.data.center.dataetl.mapping.vo.ConcatFieldVO">
                <id column="id" property="id"/>
                <result column="fieldIndex" property="fieldIndex"/>
            </collection>
        </collection>
        <collection property="mappingFieldVOs"
                    ofType="com.gtafe.data.center.dataetl.mapping.vo.MappingFieldVO">
            <id column="id" property="id"/>
            <result column="mappingId" property="mappingId"/>
            <result column="sourceField" property="sourceField"/>
            <result column="sourceParentField" property="sourceParentField"/>
            <result column="targetField" property="targetField"/>
            <result column="sourceIsprimary" property="sourceIsprimary"/>
            <result column="targetTableName" property="targetTableName"/>
            <result column="sourceFieldfromType" property="sourceFieldfromType"/>
            <result column="targetType" property="targetType"/>
            <result column="targetIsprimary" property="targetIsprimary"/>
            <result column="targetFieldfromType" property="targetFieldfromType"/>
        </collection>
        <collection property="mappingWhereVOs"
                    ofType="com.gtafe.data.center.dataetl.mapping.vo.MappingWhereVO">
            <id column="id" property="id"/>
            <result column="mappingId" property="mappingId"/>
            <result column="sourceField" property="sourceField"/>
            <result column="targetField" property="targetField"/>
        </collection>

    </resultMap>

    <select id="findMappingInfoById"  resultType="com.gtafe.data.center.dataetl.mapping.vo.MappingVO">
        SELECT
            m.id,
            m.description          description,
            m.`name`,
            m.datatype_value       datatypeValue,
            m.executing_rowcount   executingRowcount,
            m.schedule_id          scheduleId,
            m.source_connection_id sourceConnectionId,
            m.source_tablename
                                   sourceTableName,
            m.target_connection_id targetConnectionId,
            m.target_tablename     targetTableName,
            m.business_type        businessType,
            m.subset_code          subsetCode,
            m.class_code           classCode,
            m.subclass_code
                                   subclassCode
        FROM
            data_etl_mapping m
        WHERE
            m.id = #{mappingId}
    </select>


    <!-- 新增映射数据 -->
    <insert id="insertSource" parameterType="com.gtafe.data.center.dataetl.mapping.vo.MappingVO">
        <!-- 获取新增序列id -->
        <selectKey resultType="java.lang.Integer" keyProperty="id">
            SELECT LAST_INSERT_ID()
        </selectKey>
        INSERT INTO data_etl_mapping (
        resourcetree_id,
        `name`,
        datatype_value,
        executing_rowcount,
        schedule_id,
        source_connection_id,
        source_tablename,
        target_connection_id,
        target_tablename,
        business_type,
        subset_code,
        class_code,
        subclass_code,
        creator,
        createtime,
        updater,
        updatetime,
        description
        )
        VALUES
        (
        #{resourceTreeId},
        #{name},
        #{datatypeValue},
        #{executingRowcount},
        #{scheduleVO.id},
        #{sourceConnectionId},
        #{sourceTableName},
        #{targetConnectionId},
        #{targetTableName},
        #{businessType},
        #{subsetCode},
        #{classCode},
        #{subclassCode},
        #{creator},
        SYSDATE(),
        #{updater},
        SYSDATE(),
        #{description}
        )
    </insert>
    <!-- 保存映射字段数据 -->
    <insert id="saveMappingField"
            parameterType="com.gtafe.data.center.dataetl.mapping.vo.MappingFieldVO">
        <selectKey resultType="java.lang.Integer" keyProperty="id"
                   order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        INSERT INTO data_etl_mapping_field (
        source_field,
        `status`,
        target_field,
        mapping_id,
        source_type,
        source_length,
        source_comment,
        source_primarykey,
        source_nullable,
        source_fieldfrom_type,
        target_type,
        target_length,
        target_comment,
        target_primarykey,
        target_nullable,
        target_fieldfrom_type,
        creator,
        createtime,
        updater,
        updatetime,
        source_parent_field
        )
        VALUES
        <foreach collection="mappingFieldVOs" item="mapping"
                 separator=",">
            <if
                    test="mapping.sourceField !='...请选择...' and mapping.targetField != '...请选择...' ">
                (
                #{mapping.sourceField},
                #{mapping.status},
                #{mapping.targetField},
                #{mappingId},
                #{mapping.sourceType},
                #{mapping.sourceLength},
                #{mapping.sourceComment},
                #{mapping.sourcePrimarykey},
                #{mapping.sourceNullable},
                #{mapping.sourceFieldfromType},
                #{mapping.targetType},
                #{mapping.targetLength},
                #{mapping.targetComment},
                #{mapping.targetPrimarykey},
                #{mapping.targetNullable},
                #{mapping.targetFieldfromType},
                #{mapping.creator},
                SYSDATE(),
                #{mapping.updater},
                SYSDATE(),
                #{mapping.sourceParentField}
                )
            </if>

        </foreach>
    </insert>
    
    <!-- 保存同步计划信息 -->
    <insert id="saveScheduleInfo" parameterType="com.gtafe.data.center.dataetl.mapping.vo.ScheduleVO">
        <!-- 获取新增序列id -->
        <selectKey resultType="java.lang.Integer" keyProperty="id">
            SELECT LAST_INSERT_ID()
        </selectKey>
        INSERT INTO
        data_etl_schedule (
        isrepeat,
        cycle_type,
        `second`,
        `minute`,
        `hour`,
        `day`,
        `week`,
        `month`,
        `status`,
        creator,
        createtime,
        updater,
        updatetime
        )
        VALUES
        (
        #{isrepeat},
        #{cycleType},
        #{second},
        #{minute},
        #{hour},
        #{day},
        #{week},
        #{month},
        <choose>
            <when test="status == null or status == 0">
                2,
            </when>
            <otherwise>
                #{status},
            </otherwise>
        </choose>
        #{creator},
        SYSDATE(),
        #{updater},
        SYSDATE()
        )
    </insert>
    <!-- 保存更新条件数据 -->
    <insert id="saveMappingWhere">
        INSERT INTO data_etl_mapping_where (
        source_field,
        `condition`,
        target_field,
        mapping_id,
        creator,
        createtime,
        updater,
        updatetime
        )
        VALUES
        <foreach collection="mappingWhereVOs" item="mapping"
                 separator=",">
            <if
                    test="mapping.sourceField != '...请选择...' and mapping.targetField != '...请选择...'">
                (
                #{mapping.sourceField},
                #{mapping.condition},
                #{mapping.targetField},
                #{mappingId},
                #{mapping.creator},
                SYSDATE(),
                #{mapping.updater},
                SYSDATE()
                )
            </if>

        </foreach>
    </insert>
    <!-- 保存拆分字段数据 -->
    <insert id="saveSplit" parameterType="com.gtafe.data.center.dataetl.mapping.vo.SplitVO">
        INSERT INTO data_etl_trans_split (
        mapping_id,
        field,
        `separator`,
        creator,
        createtime,
        updater,
        updatetime
        )
        VALUES
        <foreach collection="splitVOs" item="split" separator=",">
            <if test="split.field != '...请选择...'">
                (
                #{mappingId},
                #{split.field},
                #{split.separator},
                #{split.creator},
                SYSDATE(),
                #{split.updater},
                SYSDATE()
                )
            </if>

        </foreach>
    </insert>
    <!-- 保存拆分字段集合 -->
    <insert id="saveSplitField">
        INSERT INTO data_etl_trans_split_field (
        field,
        field_index,
        split_id,
        trim_type,
        creator,
        createtime,
        updater,
        updatetime
        )
        VALUES
        <foreach collection="splitFieldVOs" item="splitField"
                 separator=",">
            (
            #{splitField.field},
            #{splitField.fieldIndex},
            #{splitId},
            #{splitField.trimType},
            #{splitField.creator},
            SYSDATE(),
            #{splitField.updater},
            SYSDATE()
            )
        </foreach>
    </insert>
    <!-- 查询当前id -->
    <select id="selectSplitId" resultType="java.lang.Integer">
        SELECT id
        FROM
            data_etl_trans_split
        ORDER BY
            id DESC
        LIMIT 1
    </select>
    <select id="selectConcatId" resultType="java.lang.Integer">
        SELECT id
        FROM
            data_etl_trans_concat
        ORDER BY
            id DESC
        LIMIT 1
    </select>
    <select id="selectReplaceId" resultType="java.lang.Integer">
        SELECT id
        FROM
            data_etl_trans_replace
        ORDER BY
            id DESC
        LIMIT 1
    </select>
    <!-- 保存合并数据 -->
    <insert id="saveConcat">
        INSERT INTO data_etl_trans_concat (
        mapping_id,
        newfield,
        `separator`,
        creator,
        createtime,
        updater,
        updatetime
        )
        VALUES
        <foreach collection="concatVOs" item="concat" separator=",">
            (
            #{mappingId},
            #{concat.newfield},
            #{concat.separator},
            #{concat.creator},
            SYSDATE(),
            #{concat.updater},
            SYSDATE()
            )
        </foreach>
    </insert>
    <!-- 保存合并字段集合 -->
    <insert id="saveConcatField">
        INSERT INTO data_etl_trans_concat_field (
        field,
        concat_id,
        creator,
        createtime,
        updater,
        updatetime
        )
        VALUES
        <foreach collection="concatFieldVOs" item="concatField"
                 separator=",">
            <if test="concatField.field != '...请选择...'">
                (
                #{concatField.field},
                #{concatId},
                #{concatField.creator},
                SYSDATE(),
                #{concatField.updater},
                SYSDATE()
                )
            </if>

        </foreach>
    </insert>
    <!-- 保存映射字段数据 -->
    <insert id="saveReplace">
        INSERT INTO data_etl_trans_replace (
        mapping_id,
        field,
        target_field,
        mismatch_value,
        creator,
        createtime,
        updater,
        updatetime
        )
        VALUES
        <foreach collection="replaceVOs" item="replace" separator=",">
            <if test="replace.field != '...请选择...'">
                (
                #{mappingId},
                #{replace.field},
                #{replace.targetField},
                #{replace.mismatchValue},
                #{replace.creator},
                SYSDATE(),
                #{replace.updater},
                SYSDATE()
                )
            </if>
        </foreach>
    </insert>
    <!-- 保存映射字段集合 -->
    <insert id="saveReplaceField">
        INSERT INTO data_etl_trans_replace_mapper
        (
        source_value,
        target_value,
        replace_id
        )
        VALUES
        <foreach collection="replaceFieldVOs" item="replaceField"
                 separator=",">(
            #{replaceField.sourceValue},
            #{replaceField.targetValue},
            #{replaceId}
            )
        </foreach>
    </insert>

    <select id="checkMappingExist" resultType="boolean">
        SELECT *
        FROM
            data_etl_mapping
        WHERE id = #{mappingId}
    </select>
    <select id="selectScheduleId" resultType="int">
        SELECT schedule_id
        FROM
            data_etl_mapping
        WHERE id = #{mappingId}
    </select>
    <select id="selectScheduleStatus" resultType="int">
        SELECT status
        FROM
            data_etl_schedule
        WHERE id = #{scheduleId}
    </select>
    <select id="mappingFieldList" resultType="Integer">
        SELECT id
        FROM
            data_etl_mapping_field
        WHERE mapping_id = #{mappingId};
    </select>
    <select id="getMappingWhereIds" resultType="Integer">
        SELECT id
        FROM
            data_etl_mapping_where
        WHERE mapping_id = #{mappingId};
    </select>
    <select id="getSplitListByMappingId" resultType="Integer">
        SELECT id
        FROM
            data_etl_trans_split
        WHERE mapping_id = #{mappingId};
    </select>
    <select id="getSplitFieldListById" resultType="Integer">
        SELECT id
        FROM
            data_etl_trans_split_field
        WHERE split_id = #{splitId};
    </select>
    <select id="getConcatListByMappingId" resultType="Integer">
        SELECT id
        FROM
            data_etl_trans_concat
        WHERE mapping_id = #{mappingId};
    </select>
    <select id="getConcatFieldListById" resultType="Integer">
        SELECT id
        FROM
            data_etl_trans_concat_field
        WHERE concat_id = #{concatId};
    </select>
    <select id="getReplaceListByMappingId" resultType="Integer">
        SELECT id
        FROM
            data_etl_trans_replace
        WHERE mapping_id = #{mappingId};
    </select>
    <select id="getReplaceFieldListById" resultType="Integer">
        SELECT id
        FROM
            data_etl_trans_replace_mapper
        WHERE replace_id = #{replaceId};
    </select>

    <delete id="deleteSchedule">
        DELETE FROM data_etl_schedule
        WHERE id = #{id}
    </delete>
    <delete id="deleteMappingField">
        DELETE FROM data_etl_mapping_field
        WHERE id = #{id}
    </delete>
    <delete id="deleteMappingWhere">
        DELETE FROM data_etl_mapping_where
        WHERE id = #{id}
    </delete>
    <delete id="deleteSplitField">
        DELETE FROM data_etl_trans_split_field
        WHERE id = #{id}
    </delete>
    <delete id="deleteSplit">
        DELETE FROM data_etl_trans_split
        WHERE id = #{id}
    </delete>
    <delete id="deleteConcatField">
        DELETE FROM data_etl_trans_concat_field
        WHERE id = #{id}
    </delete>
    <delete id="deleteConcat">
        DELETE FROM data_etl_trans_concat
        WHERE id = #{id}
    </delete>
    <delete id="deleteReplaceField">
        DELETE FROM data_etl_trans_replace_mapper
        WHERE
            id = #{id}
    </delete>
    <delete id="deleteReplace">
        DELETE FROM data_etl_trans_replace
        WHERE id = #{id}
    </delete>
    <delete id="deleteMapping">
        DELETE FROM data_etl_mapping
        WHERE id = #{mappingId}
    </delete>

    <!-- 多表联合删除表记录 -->
    <delete id="deleteMappingById">
        DELETE m, s, f, w, c, cf, r, rf, l, lf FROM
            data_etl_mapping m
            LEFT JOIN data_etl_schedule s
                ON m.schedule_id = s.id
            LEFT JOIN
            data_etl_mapping_field f
                ON f.mapping_id = m.id
            LEFT JOIN
            data_etl_mapping_where w
                ON m.id = w.mapping_id
            LEFT JOIN
            data_etl_trans_concat c
                ON m.id = c.mapping_id
            LEFT JOIN
            data_etl_trans_concat_field cf
                ON cf.concat_id = c.id
            LEFT JOIN
            data_etl_trans_replace r
                ON m.id = r.mapping_id
            LEFT JOIN
            data_etl_trans_replace_mapper rf
                ON rf.replace_id = r.id
            LEFT JOIN
            data_etl_trans_split l
                ON m.id = l.mapping_id
            LEFT JOIN
            data_etl_trans_split_field lf
                ON lf.split_id = l.id
        WHERE
            m.id = #{mappingId}
    </delete>
    <select id="queryPublishVOById" resultType="com.gtafe.data.center.dataetl.mapping.vo.MappingVO">
        SELECT *
        FROM
            data_etl_mapping
        WHERE id = #{id}
    </select>

    <update id="updateStateById">
        UPDATE data_etl_schedule
        SET `status` = #{state}
        WHERE
            id = #{scheduleId}
    </update>
    <!-- 批量更改数据资源状态 -->
    <update id="updateStates" parameterType="java.util.List">
        UPDATE data_etl_schedule t
        SET t.`status` = #{batchState}
        WHERE
        t.id IN (
        SELECT
        m.schedule_id
        FROM
        data_etl_mapping m
        WHERE
        m.id IN
        <foreach collection="mappingIds" item="mappingId" open="("
                 separator="," close=")">
            #{mappingId}
        </foreach>
        )
    </update>
    <select id="getMappingByID" resultType="com.gtafe.data.center.dataetl.mapping.vo.MappingVO">
        SELECT
            id,
            resourcetree_id                                                                     resourceTreeId,
            description,
            name,
            datatype_value
                                                                                                datatypeValue,
            executing_rowcount                                                                  executingRowcount,
            schedule_id,
            source_connection_id                                                                sourceConnectionId,
            source_tablename
                                                                                                sourceTableName,
            target_connection_id                                                                targetConnectionId,
            IF(business_type = 1, (SELECT subclass_tablename
                                   FROM info_metadata_subclass tt
                                   WHERE tt.subclass_code = t.subclass_code), target_tablename) targetTablename,
            business_type                                                                       businessType,
            subset_code                                                                         subsetCode,
            class_code                                                                          classCode,
            subclass_code
                                                                                                subclassCode,
            creator,
            createtime,
            updater,
            updatetime
        FROM
            data_etl_mapping t
        WHERE id = #{mappingId}
    </select>
    <select id="getMappingFields"
            resultType="com.gtafe.data.center.dataetl.mapping.vo.MappingFieldVO">
        SELECT
            target_field targetField,
            source_field sourceField
        FROM
            data_etl_mapping_field
        WHERE
            mapping_id = #{mappingId}
    </select>

    <select id="getMappingFields2"
            resultType="com.gtafe.data.center.dataetl.mapping.vo.MappingFieldVO">
        SELECT
            id,
            mapping_id            mappingId,
            source_type           sourceType,
            source_length         sourceLength,
            source_primarykey      sourcePrimarykey,
            source_nullable	sourceNullable,
            source_fieldfrom_type sourceFieldfromType,
            source_comment	sourceComment,
            target_type           targetType,
            target_length         targetLength,
            target_primarykey      targetPrimarykey,
            target_nullable		targetNullable,
            target_fieldfrom_type targetFieldfromType,
            target_comment	targetComment,
            `status`              STATUS,
            target_field          targetField,
            source_field          sourceField,
            source_parent_field sourceParentField
        FROM
            data_etl_mapping_field
        WHERE
            mapping_id = #{mappingId}
    </select>
    
     <select id="findSplitFieldByIds" resultType="com.gtafe.data.center.dataetl.mapping.vo.SplitFieldVO">
        select 
        field,
        field_index fieldIndex,
        split_id splitId,
        trim_type  trimType
        from data_etl_trans_split_field e
        where e.split_id in (
        <foreach collection="splitIds" item="splitId" index="index" separator=",">
            #{splitId}
        </foreach>)
    </select>   
    
    
     <select id="getConcatFieldVOByIds" resultType="com.gtafe.data.center.dataetl.mapping.vo.ConcatFieldVO">
        select 
        field, 
        concat_id  concatId
        from data_etl_trans_concat_field e
        where e.concat_id in (
        <foreach collection="concatVOIds" item="concatId" index="index" separator=",">
            #{concatId}
        </foreach>)
    </select> 
    
    
      
     <select id="getReplaceFieldVOByIds" resultType="com.gtafe.data.center.dataetl.mapping.vo.ReplaceFieldVO">
        select 
        source_value sourceValue, 
        target_value  targetValue,
        replace_id  replaceId
        from data_etl_trans_replace_mapper e
        where e.replace_id in (
        <foreach collection="replaceVOs" item="replaceId" index="index" separator=",">
            #{replaceId}
        </foreach>)
    </select>   
</mapper>